{"mappings":"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","sources":["src/js/mavo-tinymce.js"],"sourcesContent":["(function ($) {\r\n   // List of all supported controls\r\n   // in the form of \"control: plugin/core\"\r\n   const allControls = {\r\n      newdocument: 'core',\r\n      bold: 'core',\r\n      italic: 'core',\r\n      underline: 'core',\r\n      strikethrough: 'core',\r\n      alignleft: 'core',\r\n      aligncenter: 'core',\r\n      alignright: 'core',\r\n      alignjustify: 'core',\r\n      alignnone: 'core',\r\n      styleselect: 'core',\r\n      formatselect: 'core',\r\n      fontselect: 'core',\r\n      fontsizeselect: 'core',\r\n      cut: 'core',\r\n      copy: 'core',\r\n      paste: 'core',\r\n      outdent: 'core',\r\n      indent: 'core',\r\n      blockquote: 'core',\r\n      undo: 'core',\r\n      redo: 'core',\r\n      removeformat: 'core',\r\n      subscript: 'core',\r\n      superscript: 'core',\r\n      visualaid: 'core',\r\n      insert: 'core',\r\n      hr: 'hr',\r\n      bullist: 'lists',\r\n      numlist: 'lists',\r\n      link: 'link',\r\n      unlink: 'link',\r\n      openlink: 'link',\r\n      image: 'image',\r\n      charmap: 'charmap',\r\n      pastetext: 'paste',\r\n      print: 'print',\r\n      preview: 'preview',\r\n      anchor: 'anchor',\r\n      pagebreak: 'pagebreak',\r\n      spellchecker: 'spellchecker',\r\n      searchreplace: 'searchreplace',\r\n      visualblocks: 'visualblocks',\r\n      visualchars: 'visualchars',\r\n      code: 'code',\r\n      help: 'help',\r\n      fullscreen: 'fullscreen',\r\n      insertdatetime: 'insertdatetime',\r\n      media: 'media',\r\n      nonbreaking: 'nonbreaking',\r\n      save: 'save',\r\n      cancel: 'save',\r\n      table: 'table',\r\n      tabledelete: 'table',\r\n      tablecellprops: 'table',\r\n      tablemergecells: 'table',\r\n      tablesplitcells: 'table',\r\n      tableinsertrowbefore: 'table',\r\n      tableinsertrowafter: 'table',\r\n      tabledeleterow: 'table',\r\n      tablerowprops: 'table',\r\n      tablecutrow: 'table',\r\n      tablecopyrow: 'table',\r\n      tablepasterowbefore: 'table',\r\n      tablepasterowafter: 'table',\r\n      tableinsertcolbefore: 'table',\r\n      tableinsertcolafter: 'table',\r\n      tabledeletecol: 'table',\r\n      rotateleft: 'imagetools',\r\n      rotateright: 'imagetools',\r\n      flipv: 'imagetools',\r\n      fliph: 'imagetools',\r\n      editimage: 'imagetools',\r\n      imageoptions: 'imagetools',\r\n      fullpage: 'fullpage',\r\n      ltr: 'directionality',\r\n      rtl: 'directionality',\r\n      emoticons: 'emoticons',\r\n      template: 'template',\r\n      forecolor: 'textcolor',\r\n      backcolor: 'textcolor',\r\n      toc: 'toc',\r\n   };\r\n\r\n   const defaultToolbar =\r\n      'styleselect | bold italic | image link | emoticons | table | bullist numlist';\r\n\r\n   let parser, serializer;\r\n\r\n   Mavo.Plugins.register('tinymce', {\r\n      ready: $.include(\r\n         self.tinymce,\r\n         'https://cdnjs.cloudflare.com/ajax/libs/tinymce/4.9.11/tinymce.min.js'\r\n      ).then(() => {\r\n         parser = new tinymce.html.DomParser();\r\n         serializer = new tinymce.html.Serializer();\r\n      }),\r\n   });\r\n\r\n   Mavo.Elements.register('.tinymce', {\r\n      hasChildren: true,\r\n      default: true,\r\n      edit: function () {\r\n         (this.preEdit || Promise.resolve()).then((v) => {\r\n            if (v === 'abort') {\r\n               return;\r\n            }\r\n\r\n            if (this.element.tinymce) {\r\n               // Previously edited, we already have an editor\r\n               tinymce.EditorManager.execCommand(\r\n                  'mceAddEditor',\r\n                  true,\r\n                  this.element.tinymce.id\r\n               );\r\n               return;\r\n            }\r\n\r\n            const toolbar =\r\n               this.element.getAttribute('mv-tinymce-toolbar')?.trim() ||\r\n               defaultToolbar;\r\n\r\n            // Parse the passed-in toolbar\r\n            const groups = toolbar.split('|').filter((g) => g.length);\r\n            const controls = groups.join(' ').split(/\\s+/);\r\n\r\n            // Generate a set of all the plugins that must be downloaded\r\n            const plugins = new Set();\r\n            plugins.add('tabfocus'); // \"tabfocus\" is the required plugin\r\n\r\n            controls.forEach((control) => {\r\n               const plugin = allControls[control];\r\n\r\n               if (!plugin) {\r\n                  Mavo.warn(\r\n                     `Button with the name \"${control}\" can't be added to the toolbar since it is not supported by the TinyMCE plugin.`\r\n                  );\r\n                  return;\r\n               }\r\n\r\n               plugins.add(plugin);\r\n            });\r\n\r\n            // There is no plugin with the name \"core\", so we must delete it\r\n            plugins.delete('core');\r\n\r\n            // Init for the first time\r\n            tinymce\r\n               .init({\r\n                  target: this.element,\r\n                  inline: true,\r\n                  menubar: false,\r\n                  toolbar,\r\n                  plugins: Array.from(plugins).join(' '), // \"plugin plugin ... plugin\"\r\n               })\r\n               .then((editors) => {\r\n                  this.element.tinymce = editors[0];\r\n\r\n                  this.element.tinymce.on('change keyup paste cut', (evt) => {\r\n                     this.value = this.getValue();\r\n                  });\r\n               });\r\n         });\r\n      },\r\n      done: function () {\r\n         if (this.element.tinymce) {\r\n            tinymce.EditorManager.execCommand(\r\n               'mceRemoveEditor',\r\n               true,\r\n               this.element.tinymce.id\r\n            );\r\n         }\r\n      },\r\n      getValue: (element) => {\r\n         return element.tinymce\r\n            ? element.tinymce.getContent()\r\n            : element.innerHTML;\r\n      },\r\n      setValue: (element, value) => {\r\n         const content = serializer.serialize(parser.parse(value));\r\n\r\n         if (!element.tinymce) {\r\n            element.innerHTML = content;\r\n         } else if (element.tinymce.isHidden()) {\r\n            element.tinymce.setContent(content);\r\n         }\r\n      },\r\n   });\r\n})(Bliss);\r\n"],"names":["$","allControls","newdocument","bold","italic","underline","strikethrough","alignleft","aligncenter","alignright","alignjustify","alignnone","styleselect","formatselect","fontselect","fontsizeselect","cut","copy","paste","outdent","indent","blockquote","undo","redo","removeformat","subscript","superscript","visualaid","insert","hr","bullist","numlist","link","unlink","openlink","image","charmap","pastetext","print","preview","anchor","pagebreak","spellchecker","searchreplace","visualblocks","visualchars","code","help","fullscreen","insertdatetime","media","nonbreaking","save","cancel","table","tabledelete","tablecellprops","tablemergecells","tablesplitcells","tableinsertrowbefore","tableinsertrowafter","tabledeleterow","tablerowprops","tablecutrow","tablecopyrow","tablepasterowbefore","tablepasterowafter","tableinsertcolbefore","tableinsertcolafter","tabledeletecol","rotateleft","rotateright","flipv","fliph","editimage","imageoptions","fullpage","ltr","rtl","emoticons","template","forecolor","backcolor","toc","parser","serializer","Mavo","Plugins","register","ready","include","self","tinymce","then","html","DomParser","Serializer","Elements","hasChildren","default","edit","this","preEdit","Promise","resolve","v","element","EditorManager","execCommand","id","toolbar","getAttribute","trim","controls","split","filter","g","length","join","plugins","Set","add","forEach","control","plugin","warn","delete","init","target","inline","menubar","Array","from","editors","on","evt","value","getValue","done","getContent","innerHTML","setValue","content","serialize","parse","isHidden","setContent","Bliss"],"version":3,"file":"index.500efba5.js.map"}