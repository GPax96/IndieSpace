{"mappings":"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","sources":["src/js/mavo-tinymce.js"],"sourcesContent":["(function ($) {\r\n   // List of all supported controls\r\n   // in the form of \"control: plugin/core\"\r\n   const allControls = {\r\n      newdocument: 'core',\r\n      bold: 'core',\r\n      italic: 'core',\r\n      underline: 'core',\r\n      strikethrough: 'core',\r\n      alignleft: 'core',\r\n      aligncenter: 'core',\r\n      alignright: 'core',\r\n      alignjustify: 'core',\r\n      alignnone: 'core',\r\n      styleselect: 'core',\r\n      formatselect: 'core',\r\n      fontselect: 'core',\r\n      fontsizeselect: 'core',\r\n      cut: 'core',\r\n      copy: 'core',\r\n      paste: 'core',\r\n      outdent: 'core',\r\n      indent: 'core',\r\n      blockquote: 'core',\r\n      undo: 'core',\r\n      redo: 'core',\r\n      removeformat: 'core',\r\n      subscript: 'core',\r\n      superscript: 'core',\r\n      visualaid: 'core',\r\n      insert: 'core',\r\n      hr: 'hr',\r\n      bullist: 'lists',\r\n      numlist: 'lists',\r\n      link: 'link',\r\n      unlink: 'link',\r\n      openlink: 'link',\r\n      image: 'image',\r\n      charmap: 'charmap',\r\n      pastetext: 'paste',\r\n      print: 'print',\r\n      preview: 'preview',\r\n      anchor: 'anchor',\r\n      pagebreak: 'pagebreak',\r\n      spellchecker: 'spellchecker',\r\n      searchreplace: 'searchreplace',\r\n      visualblocks: 'visualblocks',\r\n      visualchars: 'visualchars',\r\n      code: 'code',\r\n      help: 'help',\r\n      fullscreen: 'fullscreen',\r\n      insertdatetime: 'insertdatetime',\r\n      media: 'media',\r\n      nonbreaking: 'nonbreaking',\r\n      save: 'save',\r\n      cancel: 'save',\r\n      table: 'table',\r\n      tabledelete: 'table',\r\n      tablecellprops: 'table',\r\n      tablemergecells: 'table',\r\n      tablesplitcells: 'table',\r\n      tableinsertrowbefore: 'table',\r\n      tableinsertrowafter: 'table',\r\n      tabledeleterow: 'table',\r\n      tablerowprops: 'table',\r\n      tablecutrow: 'table',\r\n      tablecopyrow: 'table',\r\n      tablepasterowbefore: 'table',\r\n      tablepasterowafter: 'table',\r\n      tableinsertcolbefore: 'table',\r\n      tableinsertcolafter: 'table',\r\n      tabledeletecol: 'table',\r\n      rotateleft: 'imagetools',\r\n      rotateright: 'imagetools',\r\n      flipv: 'imagetools',\r\n      fliph: 'imagetools',\r\n      editimage: 'imagetools',\r\n      imageoptions: 'imagetools',\r\n      fullpage: 'fullpage',\r\n      ltr: 'directionality',\r\n      rtl: 'directionality',\r\n      emoticons: 'emoticons',\r\n      template: 'template',\r\n      forecolor: 'textcolor',\r\n      backcolor: 'textcolor',\r\n      toc: 'toc',\r\n   };\r\n\r\n   const defaultToolbar =\r\n      'styleselect | bold italic | image link | emoticons | table | bullist numlist';\r\n\r\n   let parser, serializer;\r\n\r\n   Mavo.Plugins.register('tinymce', {\r\n      ready: $.include(\r\n         self.tinymce,\r\n         'https://cdnjs.cloudflare.com/ajax/libs/tinymce/4.9.11/tinymce.min.js'\r\n      ).then(() => {\r\n         parser = new tinymce.html.DomParser();\r\n         serializer = new tinymce.html.Serializer();\r\n      }),\r\n   });\r\n\r\n   Mavo.Elements.register('.tinymce', {\r\n      hasChildren: true,\r\n      default: true,\r\n      edit: function () {\r\n         (this.preEdit || Promise.resolve()).then((v) => {\r\n            if (v === 'abort') {\r\n               return;\r\n            }\r\n\r\n            if (this.element.tinymce) {\r\n               // Previously edited, we already have an editor\r\n               tinymce.EditorManager.execCommand(\r\n                  'mceAddEditor',\r\n                  true,\r\n                  this.element.tinymce.id\r\n               );\r\n               return;\r\n            }\r\n\r\n            const toolbar =\r\n               this.element.getAttribute('mv-tinymce-toolbar')?.trim() ||\r\n               defaultToolbar;\r\n\r\n            // Parse the passed-in toolbar\r\n            const groups = toolbar.split('|').filter((g) => g.length);\r\n            const controls = groups.join(' ').split(/\\s+/);\r\n\r\n            // Generate a set of all the plugins that must be downloaded\r\n            const plugins = new Set();\r\n            plugins.add('tabfocus'); // \"tabfocus\" is the required plugin\r\n\r\n            controls.forEach((control) => {\r\n               const plugin = allControls[control];\r\n\r\n               if (!plugin) {\r\n                  Mavo.warn(\r\n                     `Button with the name \"${control}\" can't be added to the toolbar since it is not supported by the TinyMCE plugin.`\r\n                  );\r\n                  return;\r\n               }\r\n\r\n               plugins.add(plugin);\r\n            });\r\n\r\n            // There is no plugin with the name \"core\", so we must delete it\r\n            plugins.delete('core');\r\n\r\n            // Init for the first time\r\n            tinymce\r\n               .init({\r\n                  target: this.element,\r\n                  inline: true,\r\n                  menubar: false,\r\n                  toolbar,\r\n                  plugins: Array.from(plugins).join(' '), // \"plugin plugin ... plugin\"\r\n               })\r\n               .then((editors) => {\r\n                  this.element.tinymce = editors[0];\r\n\r\n                  this.element.tinymce.on('change keyup paste cut', (evt) => {\r\n                     this.value = this.getValue();\r\n                  });\r\n               });\r\n         });\r\n      },\r\n      done: function () {\r\n         if (this.element.tinymce) {\r\n            tinymce.EditorManager.execCommand(\r\n               'mceRemoveEditor',\r\n               true,\r\n               this.element.tinymce.id\r\n            );\r\n         }\r\n      },\r\n      getValue: (element) => {\r\n         return element.tinymce\r\n            ? element.tinymce.getContent()\r\n            : element.innerHTML;\r\n      },\r\n      setValue: (element, value) => {\r\n         const content = serializer.serialize(parser.parse(value));\r\n\r\n         if (!element.tinymce) {\r\n            element.innerHTML = content;\r\n         } else if (element.tinymce.isHidden()) {\r\n            element.tinymce.setContent(content);\r\n         }\r\n      },\r\n   });\r\n})(Bliss);\r\n"],"names":[],"version":3,"file":"index.78e804b4.js.map","sourceRoot":"/__parcel_source_root/"}